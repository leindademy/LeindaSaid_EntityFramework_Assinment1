// <auto-generated />
using System;
using LeindaSaid_EntityFramework_Assinment1.context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LeindaSaid_EntityFramework_Assinment1.Migrations
{
    [DbContext(typeof(Student_Database_Context))]
    [Migration("20240818114759_StudentDatabaseMigration")]
    partial class StudentDatabaseMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<double>("Duration")
                        .HasColumnType("float");

                    b.Property<int?>("InstructorId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TopId")
                        .HasColumnType("int");

                    b.Property<int>("TopicId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("TopicId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("HiringDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Ins_ID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Bouns")
                        .HasColumnType("int");

                    b.Property<int>("Hourrate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("deptId")
                        .HasColumnType("int");

                    b.Property<int>("salary")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("deptId");

                    b.ToTable("Instructors");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Instructor_Course", b =>
                {
                    b.Property<int>("InstructorId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Evaluation")
                        .HasColumnType("int");

                    b.HasKey("InstructorId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Instructor_Courses");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Stud_Course", b =>
                {
                    b.Property<int>("Stud_ID")
                        .HasColumnType("int");

                    b.Property<int>("Course_ID")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<double>("grade")
                        .HasColumnType("float");

                    b.HasKey("Stud_ID", "Course_ID");

                    b.HasIndex("CourseId");

                    b.HasIndex("StudentId");

                    b.ToTable("Stud_Courses");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("deptId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("deptId");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Topic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Topics");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Course", b =>
                {
                    b.HasOne("LeindaSaid_EntityFramework_Assinment1.Entity.Instructor", null)
                        .WithMany("Courses")
                        .HasForeignKey("InstructorId");

                    b.HasOne("LeindaSaid_EntityFramework_Assinment1.Entity.Topic", "Topic")
                        .WithMany()
                        .HasForeignKey("TopicId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Topic");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Instructor", b =>
                {
                    b.HasOne("LeindaSaid_EntityFramework_Assinment1.Entity.Department", "department")
                        .WithMany("Instructors")
                        .HasForeignKey("deptId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("department");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Instructor_Course", b =>
                {
                    b.HasOne("LeindaSaid_EntityFramework_Assinment1.Entity.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeindaSaid_EntityFramework_Assinment1.Entity.Instructor", "Instructor")
                        .WithMany()
                        .HasForeignKey("InstructorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Instructor");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Stud_Course", b =>
                {
                    b.HasOne("LeindaSaid_EntityFramework_Assinment1.Entity.Course", "Course")
                        .WithMany("Stud_Course")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LeindaSaid_EntityFramework_Assinment1.Entity.Student", "Student")
                        .WithMany("Stud_Course")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Student", b =>
                {
                    b.HasOne("LeindaSaid_EntityFramework_Assinment1.Entity.Department", "Department")
                        .WithMany("Students")
                        .HasForeignKey("deptId")
                        .OnDelete(DeleteBehavior.SetNull)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Course", b =>
                {
                    b.Navigation("Stud_Course");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Department", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Instructor", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("LeindaSaid_EntityFramework_Assinment1.Entity.Student", b =>
                {
                    b.Navigation("Stud_Course");
                });
#pragma warning restore 612, 618
        }
    }
}
